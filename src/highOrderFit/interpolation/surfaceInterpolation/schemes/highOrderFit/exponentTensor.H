/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2017 OpenFOAM Foundation
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::highOrderFit::exponentTensor

Description

SourceFiles
    exponentTensor.C

\*---------------------------------------------------------------------------*/

#ifndef exponentTensor_H
#define exponentTensor_H

#include "labelTensor.H"
#include "tensor.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace highOrderFit
{

/*---------------------------------------------------------------------------*\
                         Class exponentTensor Declaration
\*---------------------------------------------------------------------------*/

class exponentTensor
:
    public labelTensor
{

    // Private Member Functions

        // Disallow default bitwise copy construct
        //exponentTensor(const exponentTensor&);

        // Disallow default bitwise assignment
        //void operator=(const exponentTensor&);


public:

    // Constructors

        exponentTensor();

        exponentTensor(const vector& x, const vector& y, const vector& z);

        exponentTensor
        (
            const label xx,
            const label xy,
            const label xz,
            const label yx,
            const label yy,
            const label yz,
            const label zx,
            const label zy,
            const label zz
        );

        exponentTensor(Istream&);

    //- Destructor
    ~exponentTensor();


    // Member Functions

        scalar productOfExponentials(const tensor A) const;

        scalar factorialRatio() const;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace highOrderFit

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
